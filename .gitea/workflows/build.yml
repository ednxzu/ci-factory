---
name: build
on:
  push:
    branches:
      - main

jobs:
  generate:
    name: Generate
    runs-on: ubuntu-latest
    container:
      image: git.ednz.fr/container-factory/packer-runner:act-latest
      credentials:
        username: ${{ secrets.ACTIONS_USER }}
        password: ${{ secrets.ACTIONS_TOKEN }}
    strategy:
      matrix:
        build_group: [ansible-runners]
    outputs:
      prepared_builds: ${{ steps.gen_output.outputs.prepared_builds }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "${{ gitea.workspace }}/requirements.txt"

      - name: Generate packer files
        run: factory generate --vault-login
        shell: bash
        working-directory: ${{ gitea.workspace }}
        env:
          VAULT_ADDR: https://vault.ednz.fr
          IMAGE_FACTORY_ENV: production
          IMAGE_FACTORY_INVENTORY: ${{ matrix.build_group }}
          IMAGE_FACTORY_VAULT_APPROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          IMAGE_FACTORY_VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
          ANSIBLE_FORCE_COLOR: 'true'
          ANSIBLE_PYTHON_INTERPRETER: /usr/bin/python3

      - id: gen_output
        name: Ensure packer files are generated
        run: echo "prepared_builds=$(tree -d -J | jq -r -c '[.[0].contents[].name]')" >> "$GITHUB_OUTPUT"
        shell: bash
        working-directory: ${{ gitea.workspace }}/packer/builds

  Build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: git.ednz.fr/container-factory/packer-runner:act-latest
      credentials:
        username: ${{ secrets.ACTIONS_USER }}
        password: ${{ secrets.ACTIONS_TOKEN }}
    needs: generate
    strategy:
      matrix:
        builds: ${{ toJson(needs.generate.outputs.prepared_builds) }}
    steps:
      - env:
          BUILD: ${{ matrix.builds }}
        run: echo "$BUILD"
