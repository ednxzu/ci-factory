packer {
  required_plugins {
    docker = {
      version = "{{ packer['builder_versions']['docker'] }}"
      source  = "github.com/hashicorp/docker"
    }
    ansible = {
      version = "{{ packer['provisioner_versions']['ansible'] }}"
      source  = "github.com/hashicorp/ansible"
    }
  }
}

locals{
{% if is_public_build %}
  credentials_dockerhub = {
    username = vault("{{ docker_public_registry['credentials']['path'] }}", "{{ docker_public_registry['credentials']['user_value'] }}")
    password = vault("{{ docker_public_registry['credentials']['path'] }}", "{{ docker_public_registry['credentials']['pass_value'] }}")
  }
{% endif %}
{% if is_private_build %}
  credentials_gitea = {
    username = vault("{{ docker_private_registry['credentials']['path'] }}", "{{ docker_private_registry['credentials']['user_value'] }}")
    password = vault("{{ docker_private_registry['credentials']['path'] }}", "{{ docker_private_registry['credentials']['pass_value'] }}")
  }
{% endif %}
}

source "docker" "{{ inventory_hostname }}" {
  image  = "{{ docker_base_image }}"
  commit = true
  login = false
{% if docker_full_commands %}
  changes = [
{% for command in docker_full_commands %}
    {{ command | to_json }},
{% endfor %}
  ]
{% else %}
  changes = []
{% endif %}
  run_command = ["-d", "-i", "-t", "--name", "{{ inventory_hostname }}", "{% raw %}{{.Image}}{% endraw %}", "{{ docker_run_command }}"]
}

build {
  name = "{{ inventory_hostname }}"
  sources = [
    "source.docker.{{ inventory_hostname }}"
  ]
  provisioner "shell" {
    environment_vars = [
      "DEBIAN_FRONTEND=noninteractive",
    ]
    inline = [
      "apt-get update && apt-get install python3-dev python3-apt -y"
    ]
  }

  provisioner "ansible" {
    ansible_env_vars = ["ANSIBLE_HOST_KEY_CHECKING=false"]
    extra_arguments  = [
      "-e ansible_connection=docker",
      "-e ansible_python_interpreter=/usr/bin/python3",
      "-e ansible_host={{ inventory_hostname }}",
      "-e builder_type=docker",
      "-e target_host={{ inventory_hostname }}"
    ]
    inventory_file       = "ansible/inventory/production/{{ inventory_file | basename }}"
    playbook_file        = "ansible/playbooks/{{ default_ansible_playbook }}"
    galaxy_file          = "ansible/roles/requirements.yml"
    galaxy_force_install = true
  }

{% if is_public_build %}
  post-processors {
    post-processor "docker-tag" {
      repository = "{{ docker_public_registry['server'] }}/{{ docker_public_registry['repository'] }}/{{ docker_target_image_name }}"
      tags = ["{{ docker_target_image_tag }}"]
    }
    post-processor "docker-push" {
      login = true
      login_server = "{{ docker_public_registry['server'] }}"
      login_username = "${local.credentials_dockerhub.username}"
      login_password = "${local.credentials_dockerhub.password}"
    }
  }

{% endif %}
{% if is_private_build %}
  post-processors {
    post-processor "docker-tag" {
      repository = "{{ docker_private_registry['server'] }}/{{ docker_private_registry['repository'] }}/{{ docker_target_image_name }}"
      tags = ["{{ docker_target_image_tag }}"]
    }
    post-processor "docker-push" {
      login = true
      login_server = "{{ docker_private_registry['server'] }}"
      login_username = "${local.credentials_gitea.username}"
      login_password = "${local.credentials_gitea.password}"
    }
  }
{% endif %}
}
