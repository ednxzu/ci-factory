packer {
  required_plugins {
    openstack = {
      version = "{{ packer['builder_versions']['openstack'] }}"
      source  = "github.com/hashicorp/openstack"
    }
    ansible = {
      version = "{{ packer['provisioner_versions']['ansible'] }}"
      source  = "github.com/hashicorp/ansible"
    }
  }
}

source "openstack" "{{ inventory_hostname | replace('-','_') | replace('.'~build_domain,'') }}" {
  cloud                     = "{{ cloud_entry }}"
  insecure                  = "false"
  instance_name             = "{{ inventory_hostname | replace('.'~build_domain,'') }}"
  image_name                = "{{ inventory_hostname | replace('.'~build_domain,'') }}-${formatdate("DDMMYYYY", timestamp())}"
  ssh_username              = "{{ ssh_user }}"
  external_source_image_url = "{{ external_image_source }}"
  tenant_name               = "{{ tenant_name }}"
  flavor                    = "{{ build_flavor }}"
  networks                  = [{% for network in network_attachement %}"{{ network }}"{% if not loop.last %}, {% endif %}{% endfor %}]
  use_blockstorage_volume   = {{ use_block_storage|lower }}
  volume_size               = {{ volume_size_gb }}
  image_disk_format         = "{{ image_disk_format }}"
  image_visibility          = "{{ image_visibility }}"
}

build {
  name = "{{ inventory_hostname | replace('-','_') | replace('.'~build_domain,'') }}"
  sources = [
    "source.openstack.{{ inventory_hostname | replace('-','_') | replace('.'~build_domain,'') }}"
  ]

  provisioner "ansible" {
    ansible_env_vars = ["ANSIBLE_HOST_KEY_CHECKING=false"]
    use_proxy = false
    extra_arguments  = [
      "-e ansible_python_interpreter=/usr/bin/python3",
      "-e ansible_host={{ inventory_hostname }}",
      "-e target_host={{ inventory_hostname }}"
    ]
    inventory_file       = "ansible/inventory/production/{{ inventory_file | basename }}"
    playbook_file        = "ansible/playbooks/{{ default_ansible_playbook }}"
    galaxy_file          = "ansible/roles/requirements.yml"
    galaxy_force_install = true
  }
}
